/* THIS (.ts) FILE IS GENERATED BY Tapper */
/* eslint-disable */
/* tslint:disable */
import type { ClientType, Item } from './liveorlive_server.Enums';

/** Transpiled from liveorlive_server.Models.Chat */
export type Chat = {
    /** Transpiled from System.Collections.Generic.List<liveorlive_server.Models.ChatMessage> */
    messages: ChatMessage[];
}

/** Transpiled from liveorlive_server.Models.ChatMessage */
export type ChatMessage = {
    /** Transpiled from System.Guid */
    id: string;
    /** Transpiled from string */
    author: string;
    /** Transpiled from string */
    content: string;
    /** Transpiled from long */
    timestamp: number;
}

/** Transpiled from liveorlive_server.Models.ConnectedClient */
export type ConnectedClient = {
    /** Transpiled from string */
    username: string;
    /** Transpiled from long */
    joinTime: number;
    /** Transpiled from liveorlive_server.Enums.ClientType */
    clientType: ClientType;
}

/** Transpiled from liveorlive_server.Models.GameLog */
export type GameLog = {
    /** Transpiled from System.Collections.Generic.List<liveorlive_server.Models.GameLogMessage> */
    messages: GameLogMessage[];
}

/** Transpiled from liveorlive_server.Models.GameLogMessage */
export type GameLogMessage = {
    /** Transpiled from string */
    message: string;
    /** Transpiled from long */
    timestamp: number;
}

/** Transpiled from liveorlive_server.Models.Player */
export type Player = {
    /** Transpiled from bool */
    inGame: boolean;
    /** Transpiled from int */
    lives: number;
    /** Transpiled from System.Collections.Generic.List<liveorlive_server.Enums.Item> */
    items: Item[];
    /** Transpiled from bool */
    isSkipped: boolean;
    /** Transpiled from bool */
    isRicochet: boolean;
    /** Transpiled from int */
    defaultLives: number;
} & ConnectedClient;

/** Transpiled from liveorlive_server.Models.Settings */
export type Settings = {
    /** Transpiled from bool */
    private: boolean;
    /** Transpiled from int */
    maxPlayers: number;
    /** Transpiled from int */
    minBlankRounds: number;
    /** Transpiled from int */
    minLiveRounds: number;
    /** Transpiled from int */
    maxBlankRounds: number;
    /** Transpiled from int */
    maxLiveRounds: number;
    /** Transpiled from bool */
    showFiredRoundsTally: boolean;
    /** Transpiled from int */
    defaultLives: number;
    /** Transpiled from int */
    maxLives: number;
    /** Transpiled from bool */
    allowExtraLifeWhenFull: boolean;
    /** Transpiled from bool */
    allowLifeGambleExceedMax: boolean;
    /** Transpiled from bool */
    randomItemsPerRound: boolean;
    /** Transpiled from int */
    minItemsPerRound: number;
    /** Transpiled from int */
    maxItemsPerRound: number;
    /** Transpiled from int */
    maxItems: number;
    /** Transpiled from bool */
    lootItemsOnKill: boolean;
    /** Transpiled from int */
    maxLootItemsOnKill: number;
    /** Transpiled from bool */
    allowLootItemsExceedMax: boolean;
    /** Transpiled from bool */
    enableReverseTurnOrderItem: boolean;
    /** Transpiled from bool */
    enableRackChamberItem: boolean;
    /** Transpiled from bool */
    enableExtraLifeItem: boolean;
    /** Transpiled from bool */
    enablePickpocketItem: boolean;
    /** Transpiled from bool */
    enableLifeGambleItem: boolean;
    /** Transpiled from bool */
    enableInvertItem: boolean;
    /** Transpiled from bool */
    enableChamberCheckItem: boolean;
    /** Transpiled from bool */
    enableDoubleDamageItem: boolean;
    /** Transpiled from bool */
    enableSkipItem: boolean;
    /** Transpiled from bool */
    enableRicochetItem: boolean;
    /** Transpiled from bool */
    allowLifeDonation: boolean;
    /** Transpiled from bool */
    allowPlayerRevival: boolean;
    /** Transpiled from bool */
    allowDoubleDamageStacking: boolean;
    /** Transpiled from bool */
    allowSequentialSkips: boolean;
    /** Transpiled from bool */
    allowSelfSkip: boolean;
    /** Transpiled from bool */
    showRicochets: boolean;
    /** Transpiled from bool */
    showRicochetsCounter: boolean;
    /** Transpiled from bool */
    disableDealReverseWhenTwoPlayers: boolean;
    /** Transpiled from bool */
    loseSkipAfterRound: boolean;
    /** Transpiled from bool */
    ricochetIgnoreSkippedPlayers: boolean;
    /** Transpiled from int */
    suddenDeathActivationPoint: number;
    /** Transpiled from bool */
    secondWind: boolean;
    /** Transpiled from bool */
    copySkipOnKill: boolean;
    /** Transpiled from bool */
    allowLootingDead: boolean;
    /** Transpiled from bool */
    refreshDeadPlayerItems: boolean;
    /** Transpiled from bool */
    clearDeadPlayerItemsAfterRound: boolean;
    /** Transpiled from System.Collections.Generic.Dictionary<int, int> */
    lifeGambleWeights: Partial<Record<number, number>>;
}

/** Transpiled from liveorlive_server.Models.Spectator */
export type Spectator = {
} & ConnectedClient;

